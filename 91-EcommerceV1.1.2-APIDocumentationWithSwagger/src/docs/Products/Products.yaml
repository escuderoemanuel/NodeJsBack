paths:
  /api/products/:
    getAll:
      summary: Get all products
      tags:
        - Products
      responses:
        '200':
          description: All products were correctly obtained from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Products'
        '500':
          description: Internal server error, usually generated by a query
             Faulty or a connection failure with the database
            
  /api/products/{pid}:

    get:
      summary: Get one product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: Product ID to search for
          schema:
            $type: String
      responses:
        '200':
          description: Product was correctly obtained from the database
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Product'
        '404':
          description: Product was not found in the database
        '500':
          description: Internal server error, usually generated by a query
             Faulty or a connection failure with the database
=========================
    put:
      summary: Actualiza un usuario existente en la base de datos
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario a actualizar
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateUser'

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID autogenerado por MongoDB
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Correo electronico del usuario (campo único)
        password:
          type: String
          description: Contraseña Hasheada del usuario
      example:
        _id: ObjectId(638d0e5e8f8e9d7a0d8f8e9d)
        first_name: Jane
        last_name: Doe
        email: jane@email.com
        password: $2b$10$6TDObIyljW606qW3MV113uoV5ypLmyMRQNdZkvDUKtN2sGDrTFtEG

  requestBodies:
    updateUser:
      type: object
      properties:
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Correo electronico del usuario (campo único)
        password:
          type: String
          description: Contraseña Hasheada del usuario
      example:
        first_name: Claire
        last_name: Fraser
        email: claire@email.com
        password: 1234